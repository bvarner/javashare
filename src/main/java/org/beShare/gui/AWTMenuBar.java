package org.beShare.gui;

import java.awt.*;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;

/**
	MenuBar - The MenuBar for JavaShare 2. This class constructs the entire
	Menu bar and all sub-menus, and registers which object ActionEvents should
	be sent to.
	
	Class Started: 2-08-2002
	Last Update: 4-27-2002
	
	@author Bryan Varner
	@version 1.1
*/

public class AWTMenuBar extends MenuBar {
	ActionListener		actionTarget;
	Menu				menuFile;
	MenuItem			itemFileConnect;
	MenuItem			itemFileDisconnect;
	MenuItem			itemFileExit;
	MenuItem			itemFilePrivate;
	MenuItem			itemFileClearChat;
	MenuItem			itemFileAbout;
	MenuItem			itemFileSpawn;
	
	Menu				menuEdit;
	MenuItem			itemEditCut;
	MenuItem			itemEditCopy;
	MenuItem			itemEditPaste;
	MenuItem			itemEditPrefs;
	
	/**
		Creates a new menuBar that sends all ActionEvents generated by menu
		items to <code>actionTarget</code>
	*/
	public AWTMenuBar(ActionListener target, boolean isApplet){
		super();
		actionTarget = target;
		
		menuFile = new Menu("File");
		
		menuEdit = new Menu("Edit");
		
		itemFileConnect = new MenuItem("Connect", new MenuShortcut(KeyEvent.VK_N));
		itemFileConnect.setActionCommand("menuConnect");
		itemFileConnect.addActionListener(actionTarget);
		
		itemFileDisconnect = new MenuItem("Disconnect", new MenuShortcut(KeyEvent.VK_I));
		itemFileDisconnect.setActionCommand("menuDisconnect");
		itemFileDisconnect.addActionListener(actionTarget);
		
		itemFilePrivate = new MenuItem("Open Private Chat Window");
		itemFilePrivate.setActionCommand("menuPrivate");
		itemFilePrivate.addActionListener(actionTarget);
		
		itemFileClearChat = new MenuItem("Clear Chat Log", new MenuShortcut(KeyEvent.VK_L));
		itemFileClearChat.setActionCommand("menuClear");
		itemFileClearChat.addActionListener(actionTarget);
		
		itemFileAbout = new MenuItem("About JavaShare 2");
		itemFileAbout.setActionCommand("menuAbout");
		itemFileAbout.addActionListener(actionTarget);
		
		if(! isApplet){
			itemFileExit = new MenuItem("Quit", new MenuShortcut(KeyEvent.VK_Q));
			itemFileExit.setActionCommand("menuQuit");
			itemFileExit.addActionListener(actionTarget);
		} else {
			itemFileSpawn = new MenuItem("Spawn Applet to Window"
											, new MenuShortcut(KeyEvent.VK_W));
			itemFileSpawn.setActionCommand("spawn");
			itemFileSpawn.addActionListener(actionTarget);
		}
		
		menuFile.add(itemFileConnect);
		menuFile.add(itemFileDisconnect);
		menuFile.addSeparator();
		menuFile.add(itemFilePrivate);
		menuFile.add(itemFileClearChat);
		menuFile.addSeparator();
		menuFile.add(itemFileAbout);
		menuFile.addSeparator();
		if(! isApplet){
			menuFile.add(itemFileExit);
		} else {
			menuFile.add(itemFileSpawn);
		}
		itemEditCut = new MenuItem("Cut", new MenuShortcut(KeyEvent.VK_X));
		itemEditCut.setActionCommand("cut");
		itemEditCut.addActionListener(actionTarget);
		
		itemEditCopy = new MenuItem("Copy", new MenuShortcut(KeyEvent.VK_C));
		itemEditCopy.setActionCommand("copy");
		itemEditCopy.addActionListener(actionTarget);
		
		itemEditPaste = new MenuItem("Paste", new MenuShortcut(KeyEvent.VK_V));
		itemEditPaste.setActionCommand("paste");
		itemEditPaste.addActionListener(actionTarget);
		
		itemEditPrefs = new MenuItem("Preferences", new MenuShortcut(KeyEvent.VK_P));
		itemEditPrefs.setActionCommand("prefs");
		itemEditPrefs.addActionListener(actionTarget);
		
		menuEdit.add(itemEditCut);
		menuEdit.add(itemEditCopy);
		menuEdit.add(itemEditPaste);
		menuEdit.addSeparator();
		menuEdit.add(itemEditPrefs);
		
		this.add(menuFile);
		this.add(menuEdit);
	}
}
